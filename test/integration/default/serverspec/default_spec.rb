require 'serverspec'

set :backend, :exec

describe service('rsyslog') do
  it { should be_enabled }
  it { should be_running }
end

describe file('/etc/rsyslog.d/22-loggly.conf') do
  it { should be_file }

  # Common content for all platforms
  content_lines = [
    '$DefaultNetstreamDriverCAFile /etc/rsyslog.d/keys/ca.d/logs-01.loggly.com_sha12.crt',
    '$ActionSendStreamDriver gtls',
    '$ActionSendStreamDriverMode 1',
    '$ActionSendStreamDriverAuthMode x509/name',
    '$ActionSendStreamDriverPermittedPeer *.loggly.com',
    '[test_token@41058 tag=\\"Vagrant\\" tag=\\"test\\"]'
  ]

  if os[:family] == 'ubuntu' || os[:family] == 'rhel' && os[:release].to_f >= 7.0
    content_lines << 'target="logs-01.loggly.com" port="6514"'
  elsif os[:family] == 'rhel' && os[:release].to_f < 7.0
    content_lines << '*.* @@logs-01.loggly.com:6514;LogglyFormat'
  end

  if os[:family] == 'ubuntu'
    content_lines << '$WorkDirectory /var/spool/rsyslog'
  elsif os[:family] == 'rhel'
    content_lines << '$WorkDirectory /var/lib/rsyslog'
  end

  content_lines.each do |line|
    its(:content) { should match(/#{Regexp.escape(line)}/) }
  end
end

describe file('/etc/rsyslog.d/99-files.conf') do
  it { should be_file }

  if os[:family] == 'ubuntu' || os[:family] == 'redhat' && os[:release].to_f >= 7.0
    expected_files_conf = <<-EOS.gsub(/^      /, '')
      # This file was generated by Chef

      module(load="imfile" PollingInterval="10")

      input(type="imfile"
            File="/tmp/test.log"
            Tag="test-log"
            Statefile="/tmp/test.log.rsyslog_state"
        )
    EOS
  elsif os[:family] == 'redhat' && os[:release].to_f < 7.0
    expected_files_conf = <<-EOS.gsub(/^      /, '')
      # This file was generated by Chef

      $ModLoad imfile
      $InputFilePollInterval 10

      # Input for /tmp/test.log
      $InputFileName /tmp/test.log
      $InputFileTag test-log
      $InputFileStateFile /tmp/test.log.rsyslog_state # This must be unique for each file being polled
      $InputFilePersistStateInterval 20000
      $InputRunFileMonitor
    EOS
  end

  its(:content) { should eq expected_files_conf }
end
